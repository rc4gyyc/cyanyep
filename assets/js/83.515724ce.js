(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{455:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_2、商户查询缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、商户查询缓存"}},[t._v("#")]),t._v(" 2、商户查询缓存")]),t._v(" "),s("h2",{attrs:{id:"_2-1-什么是缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-什么是缓存"}},[t._v("#")]),t._v(" 2.1 什么是缓存?")]),t._v(" "),s("p",[s("strong",[t._v("缓存("),s("strong",[t._v("Cache),就是数据交换的")]),t._v("缓冲区")]),t._v(",俗称的缓存就是"),s("strong",[t._v("缓冲区内的数据")]),t._v(",一般从数据库中获取,存储于本地代码，是存贮数据的临时地方，一般读写性能较高。")]),t._v(" "),s("h3",{attrs:{id:"_2-1-1-为什么要使用缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-为什么要使用缓存"}},[t._v("#")]),t._v(" 2.1.1 为什么要使用缓存")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("缓存"),s("strong",[t._v("速度快,好用")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("缓存数据存储于代码中,而代码运行在内存中,内存的读写性能远高于磁盘,缓存可以大大降低"),s("strong",[t._v("用户访问并发量带来的")]),t._v("服务器读写压力")])]),t._v(" "),s("li",[s("p",[t._v('实际开发过程中,企业的数据量,少则几十万,多则几千万,这么大数据量,如果没有缓存来作为"避震器",系统是几乎撑不住的,所以企业会大量运用到缓存技术;')])])])]),t._v(" "),s("li",[s("p",[t._v("但是缓存也会增加代码复杂度和运营的成本:")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.gitmirror.com/cyanyep/blog-img/master/img/image-20250122115348710.png",alt:"image-20250122115348710"}})]),t._v(" "),s("h3",{attrs:{id:"_2-1-2-如何使用缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-如何使用缓存"}},[t._v("#")]),t._v(" 2.1.2 如何使用缓存")]),t._v(" "),s("p",[t._v("实际开发中,会构筑多级缓存来使系统运行速度进一步提升,例如:本地缓存与redis中的缓存并发使用")]),t._v(" "),s("p",[s("strong",[t._v("浏览器缓存")]),t._v("：主要是存在于浏览器端的缓存")]),t._v(" "),s("p",[t._v("**应用层缓存：**可以分为tomcat本地缓存，比如之前提到的map，或者是使用redis作为缓存")]),t._v(" "),s("p",[t._v("**数据库缓存：**在数据库中有一片空间是 buffer pool，增改查数据都会先加载到mysql的缓存中")]),t._v(" "),s("p",[t._v("**CPU缓存：**当代计算机最大的问题是 cpu性能提升了，但内存读写速度没有跟上，所以为了适应当下的情况，增加了cpu的L1，L2，L3级的缓存")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.gitmirror.com/cyanyep/blog-img/master/img/image-20250122123920985.png",alt:"image-20250122123920985"}})]),t._v(" "),s("h2",{attrs:{id:"_2-2-添加商户缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-添加商户缓存"}},[t._v("#")]),t._v(" 2.2 添加商户缓存")]),t._v(" "),s("p",[t._v("在我们查询商户信息时，我们是直接操作从数据库中去进行查询的，大致逻辑是这样，直接查询数据库那肯定慢咯，所以我们需要增加缓存")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('@GetMapping("/{id}")\npublic Result queryShopById(@PathVariable("id") Long id) {\n    //这里是直接查询数据库\n    return shopService.queryById(id);\n}\n')])])]),s("h3",{attrs:{id:"_2-2-1-、缓存模型和思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-、缓存模型和思路"}},[t._v("#")]),t._v(" 2.2.1 、缓存模型和思路")]),t._v(" "),s("p",[t._v("标准的操作方式就是查询数据库之前先查询缓存，如果缓存数据存在，则直接从缓存中返回，如果缓存数据不存在，再查询数据库，然后将数据存入redis。")]),t._v(" "),s("h3",{attrs:{id:"_2-1-2、代码如下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2、代码如下"}},[t._v("#")]),t._v(" 2.1.2、代码如下")]),t._v(" "),s("p",[t._v("代码思路：如果缓存有，则直接返回，如果缓存不存在，则查询数据库，然后存入redis。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Result")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("queryById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.从缓存中查询")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CACHE_SHOP_KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" shopJson "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stringRedisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.判断是否存在")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StrUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNotBlank")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shopJson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3.存在，直接返回")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shop")]),t._v(" shop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JSONUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shopJson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ok")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4.不存在，根据id从数据库中查询")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shop")]),t._v(" shop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//5.不存在，返回错误")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fail")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"店铺不存在"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//6.存在，写入redis")]),t._v("\n    stringRedisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JSONUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toJsonStr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//7.返回")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ok")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"添加店铺类型查询业务缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加店铺类型查询业务缓存"}},[t._v("#")]),t._v(" 添加店铺类型查询业务缓存")]),t._v(" "),s("p",[t._v("店铺类型在首页和其它多个页面都会用到")]),t._v(" "),s("p",[t._v("需求：修改ShopTypeController中的queryTypeList方法，添加查询缓存")]),t._v(" "),s("p",[t._v("代码如下")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('@Override\npublic Result get() {\n    //1.从缓存中查询\n    List<String> cacheShoptypes = stringRedisTemplate.opsForList().range(CACHE_SHOPTYPE, 0, -1);\n    if (!cacheShoptypes.isEmpty()) {\n        List<ShopType> shopTypeList = cacheShoptypes.stream()\n                .map(cacheShoptype -> JSONUtil.toBean(cacheShoptype, ShopType.class))\n                .collect(Collectors.toList());\n        return Result.ok(shopTypeList);\n    }\n\n    //2.不存在，数据库查询\n    List<ShopType> typeList = query().orderByAsc("sort").list();\n    // 3. 写入缓存\n    if (!typeList.isEmpty()) {\n        List<String> jsonStrList = typeList.stream()\n                .map(JSONUtil::toJsonStr)\n                .collect(Collectors.toList());\n        stringRedisTemplate.opsForList().rightPushAll(CACHE_SHOPTYPE, jsonStrList);\n    }\n    //5.返回\n    return Result.ok(typeList);\n}\n')])])]),s("h2",{attrs:{id:"_2-3-缓存更新策略⭐⭐-缓存双写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-缓存更新策略⭐⭐-缓存双写"}},[t._v("#")]),t._v(" 2.3 缓存更新策略⭐⭐（缓存双写）")]),t._v(" "),s("p",[t._v("缓存更新是redis为了节约内存而设计出来的一个东西，主要是因为内存数据宝贵，当我们向redis插入太多数据，此时就可能会导致缓存中的数据过多，所以redis会对部分数据进行更新，或者把他叫为淘汰更合适。")]),t._v(" "),s("p",[t._v("**内存淘汰：**redis自动进行，当redis内存达到咱们设定的max-memery的时候，会自动触发淘汰机制，淘汰掉一些不重要的数据(可以自己设置策略方式)")]),t._v(" "),s("p",[t._v("**超时剔除：**当我们给redis设置了过期时间ttl之后，redis会将超时的数据进行删除，方便咱们继续使用缓存")]),t._v(" "),s("p",[t._v("**主动更新：**我们可以手动调用方法把缓存删掉，通常用于解决缓存和数据库不一致问题")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",[s("strong",[t._v("内存淘汰")])]),t._v(" "),s("th",[s("strong",[t._v("超时剔除")])]),t._v(" "),s("th",[s("strong",[t._v("主动更新")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("说明")])]),t._v(" "),s("td",[t._v("不用自己维护，利用Redis的内存淘汰机制，当内存不足时自动淘汰部分数据。下次查询时更新缓存。")]),t._v(" "),s("td",[t._v("给缓存数据添加TTL时间，到期后自动删除缓存。下次查询时更新缓存。")]),t._v(" "),s("td",[t._v("编写业务逻辑，在修改数据库的同时，更新缓存。")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("一致性")])]),t._v(" "),s("td",[t._v("差")]),t._v(" "),s("td",[t._v("一般")]),t._v(" "),s("td",[t._v("好")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("维护成本")])]),t._v(" "),s("td",[t._v("无")]),t._v(" "),s("td",[t._v("低")]),t._v(" "),s("td",[t._v("高")])])])]),t._v(" "),s("ul",[s("li",[t._v("业务场景：\n"),s("ul",[s("li",[t._v("低一致性需求：使用内存淘汰机制。例如店铺类型的查询缓存")]),t._v(" "),s("li",[t._v("高一致性需求：主动更新，并以超时剔除作为兜底方案。例如店铺详情查询的缓存")])])])]),t._v(" "),s("h3",{attrs:{id:"_2-3-1-、数据库缓存不一致解决方案-主动更新策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-、数据库缓存不一致解决方案-主动更新策略"}},[t._v("#")]),t._v(" 2.3.1 、数据库缓存不一致解决方案(主动更新策略)：")]),t._v(" "),s("p",[t._v("由于我们的"),s("strong",[t._v("缓存的数据源来自于数据库")]),t._v(",而数据库的"),s("strong",[t._v("数据是会发生变化的")]),t._v(",因此,如果当数据库中"),s("strong",[t._v("数据发生变化,而缓存却没有同步")]),t._v(",此时就会有"),s("strong",[t._v("一致性问题存在")]),t._v(",其后果是:")]),t._v(" "),s("p",[t._v("用户使用缓存中的过时数据,就会产生类似多线程数据安全问题,从而影响业务,产品口碑等;怎么解决呢？有如下几种方案")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("Cache Aside Pattern 人工编码方式")])],1),t._v("：缓存调用者在更新完数据库后再去更新缓存，也称之为双写方案")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Read/Write Through Pattern")]),t._v(" : 由系统本身完成，数据库与缓存的问题交由系统本身去处理，调用者调用该服务，无需关心缓存一致性问题。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Write Behind Caching Pattern")]),t._v(" ：调用者只操作缓存，其他线程去异步处理数据库，实现最终一致")])])]),t._v(" "),s("h3",{attrs:{id:"_2-3-2-、数据库和缓存不一致采用什么方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-、数据库和缓存不一致采用什么方案"}},[t._v("#")]),t._v(" 2.3.2 、数据库和缓存不一致采用什么方案")]),t._v(" "),s("p",[t._v("综合考虑使用方案一，但是方案一调用者如何处理呢？这里有几个问题")]),t._v(" "),s("p",[t._v("操作缓存和数据库时有三个问题需要考虑：")]),t._v(" "),s("p",[t._v("如果采用第一个方案，那么假设我们每次操作数据库后，都操作缓存，但是中间如果没有人查询，那么这个更新动作实际上只有最后一次生效，中间的更新动作意义并不大，我们"),s("strong",[t._v("可以把缓存删除，等待再次查询时，将缓存中的数据加载出来")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("删除缓存还是更新缓存？")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("更新缓存：每次更新数据库都更新缓存，无效写操作较多")])]),t._v(" "),s("li",[s("p",[t._v("删除缓存：更新数据库时让缓存失效，查询时再更新缓存 √**")])])])]),t._v(" "),s("li",[s("p",[t._v("如何保证缓存与数据库的操作的同时成功或失败？")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("单体系统，将缓存与数据库操作放在一个事务")])]),t._v(" "),s("li",[s("p",[t._v("分布式系统，利用TCC等分布式事务方案")])])])]),t._v(" "),s("li",[s("p",[t._v("先操作缓存还是先操作数据库？")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("先删除缓存，再操作数据库")])]),t._v(" "),s("li",[s("p",[t._v("先操作数据库，再删除缓存")])])])])]),t._v(" "),s("p",[t._v("应该具体操作缓存还是操作数据库，我们应当是先操作数据库，再删除缓存，原因在于，如果你选择第一种方案，在两个线程并发来访问时，假设线程1先来，他先把缓存删了，此时线程2过来，他查询缓存数据并不存在，此时他写入缓存，当他写入缓存后，线程1再执行更新动作时，实际上写入的就是旧的数据，新的数据被旧数据覆盖了。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.gitmirror.com/cyanyep/blog-img/master/img/image-20250122164032198.png",alt:"image-20250122164032198"}})]),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("缓存更新策略的最佳实践方案：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("低一致性需求：使用Redis自带的内存淘汰机制")])]),t._v(" "),s("li",[s("p",[t._v("高一致性需求：主动更新，并以"),s("strong",[t._v("超时")]),t._v("剔除作为兜底方案")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("读操作：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("缓存命中则直接返回")])]),t._v(" "),s("li",[s("p",[t._v("缓存未命中则查询数据库，并写入缓存，"),s("strong",[t._v("设定超时时间")])])])])]),t._v(" "),s("li",[s("p",[t._v("写操作：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("先写数据库，然后再删除缓存")])])]),t._v(" "),s("li",[s("p",[t._v("要确保数据库与缓存操作的原子性")])])])])]),t._v(" "),s("h2",{attrs:{id:"_2-4-实现商铺和缓存与数据库双写一致"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-实现商铺和缓存与数据库双写一致"}},[t._v("#")]),t._v(" 2.4 实现商铺和缓存与数据库双写一致")]),t._v(" "),s("p",[t._v("核心思路如下：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("修改ShopController中的业务逻辑，满足下面的需求：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("根据id查询店铺时，如果缓存未命中，则查询数据库，将数据库结果写入缓存，并设置超时时间")])]),t._v(" "),s("li",[s("p",[t._v("根据id修改店铺时，先修改数据库，再删除缓存")])])])])]),t._v(" "),s("p",[s("strong",[t._v("修改重点代码1")]),t._v("：修改"),s("strong",[t._v("ShopServiceImpl")]),t._v("的queryById方法")]),t._v(" "),s("p",[s("strong",[t._v("设置redis缓存时添加过期时间")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//6.存在，写入redis\nstringRedisTemplate.opsForValue().set(key, JSONUtil.toJsonStr(shop),CACHE_SHOP_TTL, TimeUnit.MINUTES);\n")])])]),s("p",[s("strong",[t._v("修改重点代码2")])]),t._v(" "),s("p",[t._v("代码分析：通过之前的淘汰，我们确定了采用删除策略，来解决双写问题，当我们修改了数据之后，然后把缓存中的数据进行删除，查询时发现缓存中没有数据，则会从mysql中加载最新的数据，从而避免数据库和缓存不一致的问题，使用事务防止缓存删除失败，导致缓存数据库不一致")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('@Override\n@Transactional\npublic Result update(Shop shop) {\n    Long id = shop.getId();\n    if (id == null) {\n        return Result.fail("店铺id不能为空");\n    }\n    //更新数据库\n    updateById(shop);\n    //删除缓存\n    stringRedisTemplate.delete(CACHE_SHOP_KEY + id);\n    return Result.ok();\n}\n')])])]),s("h2",{attrs:{id:"_2-5-缓存穿透问题的解决思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-缓存穿透问题的解决思路"}},[t._v("#")]),t._v(" 2.5 缓存穿透问题的解决思路**")]),t._v(" "),s("p",[s("strong",[t._v("缓存穿透")]),t._v(" ：缓存穿透是指客户端请求的数据在缓存中和数据库中都不存在，这样缓存永远不会生效，这些请求都会打到数据库。")]),t._v(" "),s("p",[t._v("常见的解决方案有两种：")]),t._v(" "),s("ul",[s("li",[t._v("缓存空对象\n"),s("ul",[s("li",[t._v("优点：实现简单，维护方便")]),t._v(" "),s("li",[t._v("缺点：\n"),s("ul",[s("li",[s("strong",[t._v("额外的内存消耗")])]),t._v(" "),s("li",[t._v("可能造成"),s("strong",[t._v("短期的不一致")])])])])])]),t._v(" "),s("li",[t._v("布隆过滤\n"),s("ul",[s("li",[t._v("优点："),s("strong",[t._v("内存占用较少")]),t._v("，没有多余key")]),t._v(" "),s("li",[t._v("缺点：\n"),s("ul",[s("li",[s("strong",[t._v("实现复杂")])]),t._v(" "),s("li",[t._v("存在误判可能，不能判断一定存在，但是判断不存在就一定是不存在")])])])])])]),t._v(" "),s("p",[t._v("**缓存空对象思路分析：**当我们客户端访问不存在的数据时，先请求redis，但是此时redis中没有数据，此时会访问到数据库，但是数据库中也没有数据，这个数据穿透了缓存，直击数据库，我们都知道数据库能够承载的并发不如redis这么高，如果大量的请求同时过来访问这种不存在的数据，这些请求就都会访问到数据库，")]),t._v(" "),s("p",[t._v("​\t简单的解决方案就是哪怕这个数据在数据库中也不存在，我们也把这个数据存入到redis中去，这样，下次用户过来访问这个不存在的数据，那么在redis中也能找到这个数据就不会进入到缓存了")]),t._v(" "),s("p",[t._v("**布隆过滤：**布隆过滤器其实采用的是哈希思想来解决这个问题，通过一个庞大的二进制数组，走哈希思想去判断当前这个要查询的这个数据是否存在，如果布隆过滤器判断存在，则放行，这个请求会去访问redis，哪怕此时redis中的数据过期了，但是数据库中一定存在这个数据，在数据库中查询出来这个数据后，再将其放入到redis中，")]),t._v(" "),s("p",[t._v("​\t假设"),s("strong",[t._v("布隆过滤器判断这个数据不存在，则直接返回")])]),t._v(" "),s("p",[t._v("​\t这种方式优点在于节约内存空间，存在误判，"),s("strong",[t._v("误判")]),t._v("原因在于：布隆过滤器走的是哈希思想，只要哈希思想，就可能存在"),s("strong",[t._v("哈希冲突")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.gitmirror.com/cyanyep/blog-img/master/img/image-20250122174003198.png",alt:"image-20250122174003198"}})]),t._v(" "),s("h2",{attrs:{id:"_2-6-编码解决商品查询的缓存穿透问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-编码解决商品查询的缓存穿透问题"}},[t._v("#")]),t._v(" 2.6 编码解决商品查询的缓存穿透问题：")]),t._v(" "),s("p",[t._v("核心思路如下：")]),t._v(" "),s("p",[t._v("在原来的逻辑中，我们如果发现这个数据在mysql中不存在，直接就返回404了，这样是会存在缓存穿透问题的")]),t._v(" "),s("p",[t._v("现在的逻辑中：如果这个数据不存在，我们不会返回404 ，还是会把这个数据写入到Redis中，并且将value设置为空，欧当再次发起查询时，我们如果发现命中之后，判断这个value是否是null，"),s("strong",[t._v("如果是null，则是之前写入的数据，证明是缓存穿透数据")]),t._v("，如果不是，则直接返回店铺信息。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.gitmirror.com/cyanyep/blog-img/master/img/1653327124561.png",alt:"1653327124561"}})]),t._v(" "),s("p",[t._v("代码：ShopServiceImpl.java")]),t._v(" "),s("p",[t._v("isNotBlank判断当字符串有值时为true，null和空字符串都是false，所以shopJson不为null就是空字符串")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断命中是否是空值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shopJson "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fail")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"店铺信息不存在"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4.不存在，根据id从数据库中查询")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shop")]),t._v(" shop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//5.不存在，返回错误")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    stringRedisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CACHE_NULL_TTL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MINUTES")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fail")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"店铺信息不存在"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("小总结：")])]),t._v(" "),s("p",[t._v("缓存穿透产生的原因是什么？")]),t._v(" "),s("ul",[s("li",[t._v("用户请求的数据在缓存中和数据库中都不存在，不断发起这样的请求，给数据库带来巨大压力")])]),t._v(" "),s("p",[t._v("缓存穿透的解决方案有哪些？")]),t._v(" "),s("ul",[s("li",[t._v("缓存null值")]),t._v(" "),s("li",[t._v("布隆过滤")]),t._v(" "),s("li",[t._v("增强id的复杂度，避免被猜测id规律")]),t._v(" "),s("li",[t._v("做好数据的基础格式校验")]),t._v(" "),s("li",[t._v("加强用户权限校验")]),t._v(" "),s("li",[t._v("做好热点参数的限流")])]),t._v(" "),s("h2",{attrs:{id:"_2-7-缓存雪崩问题及解决思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-缓存雪崩问题及解决思路"}},[t._v("#")]),t._v(" 2.7 缓存雪崩问题及解决思路**")]),t._v(" "),s("p",[t._v("缓存雪崩是指在同一时段"),s("strong",[t._v("大量的缓存key同时失效或者Redis服务宕机")]),t._v("，导致大量请求到达数据库，带来巨大压力。")]),t._v(" "),s("p",[s("font",{attrs:{color:"red"}},[t._v("解决方案：")])],1),t._v(" "),s("ul",[s("li",[t._v("给不同的Key的TTL添加随机值")]),t._v(" "),s("li",[t._v("利用Redis集群提高服务的可用性")]),t._v(" "),s("li",[t._v("给缓存业务添加降级限流策略")]),t._v(" "),s("li",[t._v("给业务添加多级缓存")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.gitmirror.com/cyanyep/blog-img/master/img/1653327884526.png",alt:"1653327884526"}})]),t._v(" "),s("h2",{attrs:{id:"_2-8-缓存击穿问题及解决思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-缓存击穿问题及解决思路"}},[t._v("#")]),t._v(" 2.8 缓存击穿问题及解决思路**")]),t._v(" "),s("p",[t._v("缓存击穿问题也叫热点Key问题，就是一个"),s("strong",[t._v("被高并发访问"),s("em",[t._v("并且")]),t._v("缓存重建业务较复杂")]),t._v("的key突然失效了，无数的请求访问会在瞬间给数据库带来巨大的冲击。")]),t._v(" "),s("p",[s("font",{attrs:{color:"red"}},[t._v("常见的解决方案")]),t._v("有两种：")],1),t._v(" "),s("ul",[s("li",[t._v("互斥锁")]),t._v(" "),s("li",[t._v("逻辑过期")])]),t._v(" "),s("p",[t._v("逻辑分析：假设线程1在查询缓存之后，本来应该去查询数据库，然后把这个数据重新加载到缓存的，此时只要线程1走完这个逻辑，其他线程就都能从缓存中加载这些数据了，但是"),s("strong",[t._v("假设在线程1没有走完(缓存重建业务复杂)的时候")]),t._v("，后续的线程2，线程3，线程4同时过来访问当前这个方法， 那么这些线程都不能从缓存中查询到数据，那么他们就会同一时刻来访问查询缓存，都没查到，接着"),s("strong",[t._v("同一时间去访问数据库")]),t._v("，同时的去执行数据库代码，对数据库访问压力过大")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.gitmirror.com/cyanyep/blog-img/master/img/image-20250122181315438.png",alt:"image-20250122181315438"}})]),t._v(" "),s("p",[t._v("解决方案一、使用锁来解决：*")]),t._v(" "),s("p",[t._v("因为锁能实现互斥性。假设线程过来，"),s("strong",[t._v("只能一个人一个人的来访问数据库")]),t._v("，从而避免对于数据库访问压力过大，但这也会影响查询的性能，因为此时会让查询的性能从并行变成了串行，我们可以采用tryLock方法 + double check来解决这样的问题。")]),t._v(" "),s("p",[t._v("假设现在线程1过来访问，他查询缓存没有命中，但是此时他获得到了锁的资源，那么线程1就会一个人去执行逻辑，假设现在线程2过来，线程2在执行过程中，并没有获得到锁，那么"),s("strong",[t._v("线程2就可以进行休眠")]),t._v("，直到线程1把锁释放后，线程2获得到锁，然后再来执行逻辑，此时就能够从缓存中拿到数据了。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.gitmirror.com/cyanyep/blog-img/master/img/image-20250122181353533.png",alt:"image-20250122181353533"}})]),t._v(" "),s("p",[t._v("解决方案二、逻辑过期方案*")]),t._v(" "),s("p",[t._v("方案分析：我们之所以会出现这个缓存击穿问题，主要原因是在于我们对key设置了过期时间，假设我们"),s("strong",[t._v("不设置过期时间")]),t._v("，其实就不会有缓存击穿的问题，但是不设置过期时间，这样数据不就一直占用我们内存了吗，我们可以采用"),s("strong",[t._v("逻辑过期")]),t._v("方案。")]),t._v(" "),s("p",[t._v("我们把"),s("strong",[t._v("过期时间设置在 redis的value中")]),t._v("，注意：这个过期时间并不会直接作用于redis，而是我们后续通过逻辑去处理。假设线程1去查询缓存，然后"),s("strong",[t._v("从value中判断出来当前的数据已经过期了")]),t._v("，此时线程1"),s("strong",[t._v("去获得互斥锁")]),t._v("，那么其他线程会进行阻塞，获得了锁的线程他会"),s("strong",[t._v("开启一个线程")]),t._v("去进行以前的"),s("strong",[t._v("重构数据")]),t._v("的逻辑，直到新开的线程完成这个逻辑后，才释放锁， 而"),s("strong",[t._v("线程1直接进行返回旧数据")]),t._v("，假设现在线程3过来访问，由于线程线程2持有着锁，所以线程3无法获得锁，线程3也直接返回旧数据，只有等到新开的线程2把重建数据构建完后，其他线程才能走返回正确的数据。")]),t._v(" "),s("p",[t._v("这种方案巧妙在于，"),s("strong",[t._v("异步的构建缓存")]),t._v("，缺点在于在构建完缓存之前，"),s("strong",[t._v("返回的都是脏数据")]),t._v("。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("KEY")])]),t._v(" "),s("th",[s("strong",[t._v("VALUE")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("heima:user:1")]),t._v(" "),s("td",[t._v('{name:"Jack", age:21, expire:152141223}')])])])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://raw.gitmirror.com/cyanyep/blog-img/master/img/image-20250122181440813.png",alt:"image-20250122181440813"}}),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("解决方案")])]),t._v(" "),s("th",[s("strong",[t._v("优点")])]),t._v(" "),s("th",[s("strong",[t._v("缺点")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("互斥锁")])]),t._v(" "),s("td",[s("strong",[t._v("没有额外的内存消耗")]),t._v(" "),s("br"),t._v(" 保证"),s("strong",[t._v("一致性")]),t._v(" "),s("br"),t._v(" 实现简单")]),t._v(" "),s("td",[t._v("线程需要"),s("strong",[t._v("等待")]),t._v("，性能受影响  "),s("br"),t._v("可能有"),s("strong",[t._v("死锁")]),t._v("风险")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("逻辑过期")])]),t._v(" "),s("td",[t._v("线程"),s("strong",[t._v("无需等待")]),t._v("，性能较好")]),t._v(" "),s("td",[t._v("不保证一致性 "),s("br"),t._v("有额外"),s("strong",[t._v("内存消耗")]),t._v(" "),s("br"),t._v("实现"),s("strong",[t._v("复杂")])])])])]),t._v(" "),s("p",[t._v("**互斥锁方案：**由于保证了互斥性，所以数据一致(线程必须等待缓存重建才能返回新数据)，且实现简单，因为仅仅只需要加一把锁而已，也没其他的事情需要操心，所以没有额外的内存消耗，缺点在于有锁就有死锁问题的发生，且只能串行执行性能肯定受到影响")]),t._v(" "),s("p",[s("strong",[t._v("逻辑过期方案：")]),t._v(" 线程读取过程中不需要等待，性能好，有一个额外的线程持有锁去进行重构数据，但是在重构数据完成前，其他的线程只能返回之前的数据，且实现起来麻烦")]),t._v(" "),s("h2",{attrs:{id:"_2-9-利用互斥锁解决缓存击穿问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-9-利用互斥锁解决缓存击穿问题"}},[t._v("#")]),t._v(" 2.9 利用互斥锁解决缓存击穿问题**")]),t._v(" "),s("p",[t._v("核心思路：相较于原来从缓存中查询不到数据后直接查询数据库而言，现在的方案是")]),t._v(" "),s("p",[t._v("​\t进行查询之后，如果"),s("strong",[t._v("从缓存没有查询到数据，则进行互斥锁的获取")]),t._v("，获取互斥锁后，判断是否获得到了锁，如果没有获得到，则休眠，过一会再进行尝试，直到获取到锁为止，才能进行查询")]),t._v(" "),s("p",[t._v("​\t如果"),s("strong",[t._v("获取到了锁的线程，再去进行查询")]),t._v("，查询后将数据"),s("strong",[t._v("写入redis，再释放锁，返回数据")]),t._v("，利用互斥锁就能保证只有一个线程去执行操作数据库的逻辑，"),s("strong",[t._v("防止缓存击穿")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.gitmirror.com/cyanyep/blog-img/master/img/image-20250122202553740.png",alt:"image-20250122202553740"}})]),t._v(" "),s("p",[s("strong",[t._v("操作锁的代码：")])]),t._v(" "),s("p",[t._v("核心思路就是利用redis的"),s("strong",[t._v("setnx方法来表示获取锁")]),t._v("，该方法含义是redis中如果没有这个key，则"),s("strong",[t._v("插入成功，返回1")]),t._v("，在stringRedisTemplate中返回"),s("strong",[t._v("true")]),t._v("，  如果有这个key则插入失败，则返回0，在stringRedisTemplate返回false，我们可以通过true，或者是false，来表示是否有线程成功插入key，"),s("strong",[t._v("成功插入的key的线程我们认为他就是获得到锁的线程")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),t._v(" flag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stringRedisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setIfAbsent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SECONDS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BooleanUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isTrue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    stringRedisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("操作代码：")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shop")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("queryWithMutex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CACHE_SHOP_KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、从redis中查询商铺缓存")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" shopJson "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stringRedisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、判断是否存在")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StrUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNotBlank")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shopJson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存在,直接返回")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JSONUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shopJson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断命中的值是否是空值")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shopJson "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回一个错误信息")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4.实现缓存重构")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4.1 获取互斥锁")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" lockKey "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock:shop:"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shop")]),t._v(" shop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" isLock "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lockKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4.2 判断否获取成功")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("isLock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4.3 失败，则休眠重试")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("queryWithMutex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4.4 成功，根据id查询数据库")]),t._v("\n             shop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5.不存在，返回错误")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将空值写入redis")]),t._v("\n                stringRedisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CACHE_NULL_TTL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MINUTES")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回错误信息")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//6.写入redis")]),t._v("\n            stringRedisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JSONUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toJsonStr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CACHE_NULL_TTL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MINUTES")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RuntimeException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//7.释放互斥锁")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lockKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" shop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-10-、利用逻辑过期解决缓存击穿问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-、利用逻辑过期解决缓存击穿问题"}},[t._v("#")]),t._v(" 2.10 、利用逻辑过期解决缓存击穿问题**")]),t._v(" "),s("p",[s("strong",[t._v("需求：修改根据id查询商铺的业务，基于逻辑过期方式来解决缓存击穿问题")])]),t._v(" "),s("p",[t._v("思路分析：当用户开始查询redis时，判断是否命中，如果没有命中则直接返回空数据，不查询数据库，而一旦命中后，将value取出，判断value中的过期时间是否满足，如果没有过期，则直接返回redis中的数据，"),s("strong",[t._v("如果过期，则在开启独立线程后直接返回之前的数据，独立线程去重构数据，重构完成后释放互斥锁")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.gitmirror.com/cyanyep/blog-img/master/img/image-20250122225741113.png",alt:"image-20250122225741113"}})]),t._v(" "),s("p",[t._v("如果封装数据：因为现在redis中存储的数据的value需要带上过期时间，此时要么方案一：修改原来的实体类，要么方案二：新建一个实体类，这个方案，对原来代码"),s("strong",[t._v("没有侵入性")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("步骤一、")])]),t._v(" "),s("p",[t._v("新建一个实体类")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Data")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisData")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),t._v(" expireTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以为任意对象添加过期时间")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("步骤二、")])]),t._v(" "),s("p",[t._v("在"),s("strong",[t._v("ShopServiceImpl")]),t._v(" 新增预热方法，利用单元测试进行缓存预热")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveShop2Redis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" expireSeconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.查询店铺数据")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shop")]),t._v(" shop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//模拟使用逻辑过期时间的缓存穿透的缓存重建业务复杂")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        Thread.sleep(200);")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.封装逻辑过期时间")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisData")]),t._v(" redisData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    redisData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    redisData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setExpireTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("plusSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expireSeconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3.写入缓存")]),t._v("\n    stringRedisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CACHE_SHOP_KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JSONUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toJsonStr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("redisData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("在测试类中")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testSaveShop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    shopService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveShop2Redis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("步骤三：正式代码")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建线程池")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecutorService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CACHE_REBUILD_E")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XECUTOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Executors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newFixedThreadPool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shop")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("queryWithLogicalExpire")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CACHE_SHOP_KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.从redis查询商铺缓存")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stringRedisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.判断是否存在")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StrUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isBlank")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.存在，直接返回")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4.命中，需要先把json反序列化为对象")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisData")]),t._v(" redisData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JSONUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shop")]),t._v(" shop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JSONUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JSONObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" redisData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),t._v(" expireTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redisData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExpireTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5.判断是否过期")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expireTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAfter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5.1.未过期，直接返回店铺信息")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" shop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5.2.已过期，需要缓存重建")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6.缓存重建")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6.1.获取互斥锁")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" lockKey "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LOCK_SHOP_KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" isLock "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lockKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6.2.判断是否获取锁成功")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isLock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CACHE_REBUILD_EXECUTOR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("submit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//重建缓存")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveShop2Redis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RuntimeException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lockKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6.4.返回过期的商铺信息")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" shop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("结果可以看到前面的线程返回的是旧数据，后面返回重建的新数据")]),t._v(" "),s("h2",{attrs:{id:"_2-11、封装redis工具类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-11、封装redis工具类"}},[t._v("#")]),t._v(" 2.11、封装Redis工具类")]),t._v(" "),s("p",[t._v("基于StringRedisTemplate封装一个"),s("strong",[t._v("缓存工具类")]),t._v("，满足下列需求：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("方法1：将任意Java对象序列化为json并存储在string类型的key中，并且可以设置TTL过期时间")])]),t._v(" "),s("li",[s("p",[t._v("方法2：将任意Java对象序列化为json并存储在string类型的key中，并且可以设置逻辑过期时间，用于处理缓存击穿问题")])]),t._v(" "),s("li",[s("p",[t._v("方法3：根据指定的key查询缓存，并反序列化为指定类型，利用缓存空值的方式解决缓存穿透问题")])]),t._v(" "),s("li",[s("p",[t._v("方法4：根据指定的key查询缓存，并反序列化为指定类型，需要利用逻辑过期解决缓存击穿问题")])])]),t._v(" "),s("p",[t._v("将逻辑进行封装")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('@Slf4j\n@Component\npublic class CacheClient {\n\n    private final StringRedisTemplate stringRedisTemplate;\n\n\t//线程池\n    private static final ExecutorService CACHE_REBUILD_EXECUTOR = Executors.newFixedThreadPool(10);\n\n    public CacheClient(StringRedisTemplate stringRedisTemplate) {\n        this.stringRedisTemplate = stringRedisTemplate;\n    }\n\n    public void set(String key, Object value, Long time, TimeUnit unit) {\n        stringRedisTemplate.opsForValue().set(key, JSONUtil.toJsonStr(value), time, unit);\n    }\n\n    public void setWithLogicalExpire(String key, Object value, Long time, TimeUnit unit) {\n        // 设置逻辑过期\n        RedisData redisData = new RedisData();\n        redisData.setData(value);\n        redisData.setExpireTime(LocalDateTime.now().plusSeconds(unit.toSeconds(time)));\n        // 写入Redis\n        stringRedisTemplate.opsForValue().set(key, JSONUtil.toJsonStr(redisData));\n    }\n\n    public <R,ID> R queryWithPassThrough(\n            String keyPrefix, ID id, Class<R> type, Function<ID, R> dbFallback, Long time, TimeUnit unit){\n        String key = keyPrefix + id;\n        // 1.从redis查询商铺缓存\n        String json = stringRedisTemplate.opsForValue().get(key);\n        // 2.判断是否存在\n        if (StrUtil.isNotBlank(json)) {\n            // 3.存在，直接返回\n            return JSONUtil.toBean(json, type);\n        }\n        // 判断命中的是否是空值\n        if (json != null) {\n            // 返回一个错误信息\n            return null;\n        }\n\n        // 4.不存在，根据id查询数据库\n        R r = dbFallback.apply(id);\n        // 5.不存在，返回错误\n        if (r == null) {\n            // 将空值写入redis\n            stringRedisTemplate.opsForValue().set(key, "", CACHE_NULL_TTL, TimeUnit.MINUTES);\n            // 返回错误信息\n            return null;\n        }\n        // 6.存在，写入redis\n        this.set(key, r, time, unit);\n        return r;\n    }\n\n    public <R, ID> R queryWithLogicalExpire(\n            String keyPrefix, ID id, Class<R> type, Function<ID, R> dbFallback, Long time, TimeUnit unit) {\n        String key = keyPrefix + id;\n        // 1.从redis查询商铺缓存\n        String json = stringRedisTemplate.opsForValue().get(key);\n        // 2.判断是否存在\n        if (StrUtil.isBlank(json)) {\n            // 3.存在，直接返回\n            return null;\n        }\n        // 4.命中，需要先把json反序列化为对象\n        RedisData redisData = JSONUtil.toBean(json, RedisData.class);\n        R r = JSONUtil.toBean((JSONObject) redisData.getData(), type);\n        LocalDateTime expireTime = redisData.getExpireTime();\n        // 5.判断是否过期\n        if(expireTime.isAfter(LocalDateTime.now())) {\n            // 5.1.未过期，直接返回店铺信息\n            return r;\n        }\n        // 5.2.已过期，需要缓存重建\n        // 6.缓存重建\n        // 6.1.获取互斥锁\n        String lockKey = LOCK_SHOP_KEY + id;\n        boolean isLock = tryLock(lockKey);\n        // 6.2.判断是否获取锁成功\n        if (isLock){\n            // 6.3.成功，开启独立线程，实现缓存重建\n            CACHE_REBUILD_EXECUTOR.submit(() -> {\n                try {\n                    // 查询数据库\n                    R newR = dbFallback.apply(id);\n                    // 重建缓存\n                    this.setWithLogicalExpire(key, newR, time, unit);\n                } catch (Exception e) {\n                    throw new RuntimeException(e);\n                }finally {\n                    // 释放锁\n                    unlock(lockKey);\n                }\n            });\n        }\n        // 6.4.返回过期的商铺信息\n        return r;\n    }\n\n    public <R, ID> R queryWithMutex(\n            String keyPrefix, ID id, Class<R> type, Function<ID, R> dbFallback, Long time, TimeUnit unit) {\n        String key = keyPrefix + id;\n        // 1.从redis查询商铺缓存\n        String shopJson = stringRedisTemplate.opsForValue().get(key);\n        // 2.判断是否存在\n        if (StrUtil.isNotBlank(shopJson)) {\n            // 3.存在，直接返回\n            return JSONUtil.toBean(shopJson, type);\n        }\n        // 判断命中的是否是空值\n        if (shopJson != null) {\n            // 返回一个错误信息\n            return null;\n        }\n\n        // 4.实现缓存重建\n        // 4.1.获取互斥锁\n        String lockKey = LOCK_SHOP_KEY + id;\n        R r = null;\n        try {\n            boolean isLock = tryLock(lockKey);\n            // 4.2.判断是否获取成功\n            if (!isLock) {\n                // 4.3.获取锁失败，休眠并重试\n                Thread.sleep(50);\n                return queryWithMutex(keyPrefix, id, type, dbFallback, time, unit);\n            }\n            // 4.4.获取锁成功，根据id查询数据库\n            r = dbFallback.apply(id);\n            // 5.不存在，返回错误\n            if (r == null) {\n                // 将空值写入redis\n                stringRedisTemplate.opsForValue().set(key, "", CACHE_NULL_TTL, TimeUnit.MINUTES);\n                // 返回错误信息\n                return null;\n            }\n            // 6.存在，写入redis\n            this.set(key, r, time, unit);\n        } catch (InterruptedException e) {\n            throw new RuntimeException(e);\n        }finally {\n            // 7.释放锁\n            unlock(lockKey);\n        }\n        // 8.返回\n        return r;\n    }\n\n    private boolean tryLock(String key) {\n        Boolean flag = stringRedisTemplate.opsForValue().setIfAbsent(key, "1", 10, TimeUnit.SECONDS);\n        return BooleanUtil.isTrue(flag);\n    }\n\n    private void unlock(String key) {\n        stringRedisTemplate.delete(key);\n    }\n}\n')])])]),s("h2",{attrs:{id:"总结-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.gitmirror.com/cyanyep/blog-img/master/img/4.2.%E5%95%86%E5%AE%B6%E6%9F%A5%E8%AF%A2%E7%9A%84%E7%BC%93%E5%AD%98%E5%8A%9F%E8%83%BD.png",alt:"4.2.商家查询的缓存功能"}})]),t._v(" "),s("h1",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])])])}),[],!1,null,null,null);s.default=e.exports}}]);