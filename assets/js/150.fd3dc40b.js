(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{523:function(t,a,s){"use strict";s.r(a);var e=s(1),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("消息到达MQ以后，如果MQ不能及时保存，也会导致消息丢失，所以MQ的可靠性也非常重要。")]),t._v(" "),a("h2",{attrs:{id:"数据持久化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据持久化"}},[t._v("#")]),t._v(" 数据持久化")]),t._v(" "),a("p",[t._v("为了提升性能，默认情况下MQ的数据都是在内存存储的临时数据，重启后就会消失。为了保证数据的可靠性，必须配置数据持久化，包括：")]),t._v(" "),a("ul",[a("li",[t._v("交换机持久化")]),t._v(" "),a("li",[t._v("队列持久化")]),t._v(" "),a("li",[t._v("消息持久化")])]),t._v(" "),a("p",[t._v("我们以控制台界面为例来说明。")]),t._v(" "),a("h3",{attrs:{id:"交换机持久化⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#交换机持久化⭐"}},[t._v("#")]),t._v(" 交换机持久化⭐")]),t._v(" "),a("p",[t._v("在控制台的"),a("code",[t._v("Exchanges")]),t._v("页面，添加交换机时可以配置交换机的"),a("code",[t._v("Durability")]),t._v("参数：")]),t._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5C86157%5CDesktop%5Cblog-img%5Cimg%5C1746445931864-1.png",alt:"img"}})]),t._v(" "),a("p",[t._v("设置为"),a("code",[t._v("Durable")]),t._v("就是持久化模式，"),a("code",[t._v("Transient")]),t._v("就是临时模式。")]),t._v(" "),a("h3",{attrs:{id:"队列持久化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队列持久化"}},[t._v("#")]),t._v(" 队列持久化")]),t._v(" "),a("p",[t._v("在控制台的Queues页面，添加队列时，同样可以配置队列的"),a("code",[t._v("Durability")]),t._v("参数：")]),t._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5C86157%5CDesktop%5Cblog-img%5Cimg%5C1746445946181-4.png",alt:"img"}})]),t._v(" "),a("p",[t._v("除了持久化以外，你可以看到队列还有很多其它参数，有一些我们会在后期学习。")]),t._v(" "),a("h3",{attrs:{id:"消息持久化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息持久化"}},[t._v("#")]),t._v(" 消息持久化")]),t._v(" "),a("p",[t._v("在控制台发送消息的时候，可以添加很多参数，而消息的持久化是要配置一个"),a("code",[t._v("properties")]),t._v("：")]),t._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5C86157%5CDesktop%5Cblog-img%5Cimg%5C1746445951368-7.png",alt:"img"}})]),t._v(" "),a("p",[a("strong",[t._v("说明")]),t._v("：在开启持久化机制以后，"),a("strong",[t._v("如果同时还开启了生产者确认，那么MQ会在消息持久化以后才发送ACK回执")]),t._v("，进一步确保消息的可靠性。")]),t._v(" "),a("p",[t._v("不过出于性能考虑，为了减少IO次数，发送到MQ的消息并不是逐条持久化到数据库的，而是每隔一段时间"),a("strong",[t._v("批量持久化")]),t._v("。一般间隔在100毫秒左右，这就会导致"),a("strong",[t._v("ACK有一定的延迟")]),t._v("，因此建议"),a("strong",[t._v("生产者确认全部采用异步方式")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"lazyqueue⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lazyqueue⭐"}},[t._v("#")]),t._v(" LazyQueue⭐")]),t._v(" "),a("p",[t._v("在默认情况下，RabbitMQ会将接收到的信息保存在内存中以降低消息收发的延迟。但在某些特殊情况下，这会导致消息积压，比如：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("消费者宕机或出现网络故障")])]),t._v(" "),a("li",[a("strong",[t._v("消息发送量激增，超过了消费者处理速度")])]),t._v(" "),a("li",[a("strong",[t._v("消费者处理业务发生阻塞")])])]),t._v(" "),a("p",[t._v("一旦出现消息堆积问题，RabbitMQ的内存占用就会越来越高，直到触发内存预警上限。此时RabbitMQ会将内存消息刷到磁盘上，这个行为称为"),a("code",[t._v("PageOut")]),t._v(". "),a("code",[t._v("PageOut")]),t._v("会耗费一段时间，并且会阻塞队列进程。因此在这个过程中RabbitMQ不会再处理新的消息，生产者的所有请求都会被阻塞。")]),t._v(" "),a("p",[t._v("为了解决这个问题，从RabbitMQ的3.6.0版本开始，就增加了Lazy Queues的模式，也就是惰性队列。惰性队列的特征如下：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("接收到消息后直接存入磁盘而非内存")])]),t._v(" "),a("li",[t._v("消费者要消费消息时才会从磁盘中读取并加载到内存（也就是懒加载）")]),t._v(" "),a("li",[t._v("支持数百万条的消息存储")])]),t._v(" "),a("p",[t._v("而在3.12版本之后，LazyQueue已经成为所有队列的默认格式。因此官方推荐升级MQ为3.12版本或者所有队列都设置为LazyQueue模式。")]),t._v(" "),a("h3",{attrs:{id:"控制台配置lazy模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制台配置lazy模式"}},[t._v("#")]),t._v(" 控制台配置Lazy模式")]),t._v(" "),a("p",[t._v("在添加队列的时候，添加"),a("code",[t._v("x-queue-mod=lazy")]),t._v("参数即可设置队列为Lazy模式：")]),t._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5C86157%5CDesktop%5Cblog-img%5Cimg%5C1746447128302-10.png",alt:"img"}})]),t._v(" "),a("h3",{attrs:{id:"代码配置lazy模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码配置lazy模式"}},[t._v("#")]),t._v(" 代码配置Lazy模式")]),t._v(" "),a("p",[t._v("在利用SpringAMQP声明队列的时候，添加"),a("code",[t._v("x-queue-mod=lazy")]),t._v("参数也可设置队列为Lazy模式：")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Queue")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lazyQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QueueBuilder")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("durable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lazy.queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lazy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开启Lazy模式")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("这里是通过"),a("code",[t._v("QueueBuilder")]),t._v("的"),a("code",[t._v("lazy()")]),t._v("函数配置Lazy模式，底层源码如下：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public QueueBuilder lazy(){\n\treturn withArgument("x-queue-mode", "lazy");\n}\n')])])]),a("p",[t._v("当然，我们也可以"),a("strong",[t._v("基于注解")]),t._v("来声明队列并设置为Lazy模式：")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RabbitListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queuesToDeclare "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Queue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lazy.queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        durable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        arguments "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Argument")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x-queue-mode"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lazy"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listenLazyQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"接收到 lazy.queue的消息：{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"更新已有队列为lazy模式⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新已有队列为lazy模式⭐"}},[t._v("#")]),t._v(" 更新已有队列为lazy模式⭐")]),t._v(" "),a("p",[t._v("对于已经存在的队列，也可以配置为lazy模式，但是要通过设置policy实现。")]),t._v(" "),a("p",[t._v("可以基于命令行设置policy：")]),t._v(" "),a("div",{staticClass:"language-Shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("rabbitmqctl set_policy Lazy "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^lazy-queue$"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"queue-mode":"lazy"}\'')]),t._v(" --apply-to queues  \n")])])]),a("p",[t._v("命令解读：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("rabbitmqctl")]),t._v(" ：RabbitMQ的命令行工具")]),t._v(" "),a("li",[a("code",[t._v("set_policy")]),t._v(" ：添加一个策略")]),t._v(" "),a("li",[a("code",[t._v("Lazy")]),t._v(" ：策略名称，可以自定义")]),t._v(" "),a("li",[a("code",[t._v('"^lazy-queue$"')]),t._v(" ：用正则表达式匹配队列的名字")]),t._v(" "),a("li",[a("code",[t._v('\'{"queue-mode":"lazy"}\'')]),t._v(" ：设置队列模式为lazy模式")]),t._v(" "),a("li",[a("code",[t._v("--apply-to queues")]),t._v("：策略的作用对象，是所有的队列")])]),t._v(" "),a("p",[t._v("当然，也可以在控制台配置policy，进入在控制台的"),a("code",[t._v("Admin")]),t._v("页面，点击"),a("code",[t._v("Policies")]),t._v("，即可添加配置：")]),t._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5C86157%5CDesktop%5Cblog-img%5Cimg%5C1746447340916-13.png",alt:"img"}})])])}),[],!1,null,null,null);a.default=n.exports}}]);