(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{517:function(t,a,s){"use strict";s.r(a);var e=s(1),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("主要是对索引库的操作")])]),t._v(" "),a("p",[t._v("Index就类似数据库表，Mapping映射就类似表的结构。我们要向es中存储数据，必须先创建Index和Mapping")]),t._v(" "),a("h2",{attrs:{id:"mapping映射属性⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mapping映射属性⭐"}},[t._v("#")]),t._v(" Mapping映射属性⭐")]),t._v(" "),a("p",[t._v("Mapping是对索引库中文档的约束，常见的Mapping属性包括：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("type")]),t._v("：字段数据类型，常见的简单类型有：\n"),a("ul",[a("li",[t._v("字符串："),a("code",[t._v("text")]),t._v("（可分词的文本）、"),a("code",[t._v("keyword")]),t._v("（精确值，例如：品牌、国家、ip地址）")]),t._v(" "),a("li",[t._v("数值："),a("code",[t._v("long")]),t._v("、"),a("code",[t._v("integer")]),t._v("、"),a("code",[t._v("short")]),t._v("、"),a("code",[t._v("byte")]),t._v("、"),a("code",[t._v("double")]),t._v("、"),a("code",[t._v("float")]),t._v("、")]),t._v(" "),a("li",[t._v("布尔："),a("code",[t._v("boolean")])]),t._v(" "),a("li",[t._v("日期："),a("code",[t._v("date")])]),t._v(" "),a("li",[t._v("对象："),a("code",[t._v("object")])])])]),t._v(" "),a("li",[a("code",[t._v("index")]),t._v("：是否创建索引，默认为"),a("code",[t._v("true")])]),t._v(" "),a("li",[a("code",[t._v("analyzer")]),t._v("：使用哪种分词器")]),t._v(" "),a("li",[a("code",[t._v("properties")]),t._v("：该字段的子字段")])]),t._v(" "),a("p",[t._v("例如下面的json文档：")]),t._v(" "),a("div",{staticClass:"language-JSON extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"weight"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("52.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"isMarried"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"info"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"黑马程序员Java讲师"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"email"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zy@itcast.cn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"score"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("99.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("99.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("98.9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"firstName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"云"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lastName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"赵"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("对应的每个字段映射（Mapping）：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("字段名")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("字段类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("类型说明")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("是否参与搜索")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("是否参与分词")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("分词器")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("age")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("integer")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("整数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("√")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("——")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("weight")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("float")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("浮点数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("√")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("——")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("isMarried")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("布尔")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("√")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("——")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("info")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("text")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("字符串，但需要分词")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("√")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("√")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("IK")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("email")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("keyword")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("字符串，但是不分词")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("——")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("score")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("float")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("只看数组中元素类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("√")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("——")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("name       irstName")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("keyword")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("字符串，但是不分词")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("√")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("——")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("lastName")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("keyword")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("字符串，但是不分词")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("√")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("——")])])])]),t._v(" "),a("h2",{attrs:{id:"索引库的crud"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引库的crud"}},[t._v("#")]),t._v(" 索引库的CRUD")]),t._v(" "),a("p",[t._v("由于Elasticsearch采用的是Restful风格的API，因此其请求方式和路径相对都比较规范，而且请求参数也都采用JSON风格。")]),t._v(" "),a("p",[t._v("我们直接基于Kibana的DevTools来编写请求做测试，由于有语法提示，会非常方便。")]),t._v(" "),a("h3",{attrs:{id:"创建索引库和映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建索引库和映射"}},[t._v("#")]),t._v(" 创建索引库和映射")]),t._v(" "),a("p",[a("strong",[t._v("基本语法")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("请求方式："),a("code",[t._v("PUT")])]),t._v(" "),a("li",[t._v("请求路径："),a("code",[t._v("/索引库名")]),t._v("，可以自定义")]),t._v(" "),a("li",[t._v("请求参数："),a("code",[t._v("mapping")]),t._v("映射")])]),t._v(" "),a("p",[a("strong",[t._v("格式")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-JSON extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("PUT /索引库名称\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"mappings"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"properties"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"字段名"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"analyzer"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ik_smart"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"字段名2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyword"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"index"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"字段名3"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"properties"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"子字段"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyword"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...略")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"查询索引库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询索引库"}},[t._v("#")]),t._v(" 查询索引库")]),t._v(" "),a("p",[a("strong",[t._v("基本语法")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("请求方式：GET")]),t._v(" "),a("li",[t._v("请求路径：/索引库名")]),t._v(" "),a("li",[t._v("请求参数：无")])]),t._v(" "),a("p",[a("strong",[t._v("格式")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-Plain extra-class"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[t._v("GET /索引库名\n")])])]),a("h3",{attrs:{id:"修改索引库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改索引库"}},[t._v("#")]),t._v(" 修改索引库")]),t._v(" "),a("p",[t._v("倒排索引结构虽然不复杂，但是一旦数据结构改变（比如改变了分词器），就需要重新创建倒排索引，这简直是灾难。因此索引库"),a("strong",[t._v("一旦创建，无法修改mapping")]),t._v("。")]),t._v(" "),a("p",[t._v("虽然无法修改mapping中已有的字段，但是却"),a("strong",[t._v("允许添加新的字段到mapping中")]),t._v("，因为不会对倒排索引产生影响。因此修改索引库能做的就是向索引库中添加新字段，或者更新索引库的基础属性。")]),t._v(" "),a("p",[a("strong",[t._v("语法说明")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-JSON extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("PUT /索引库名/_mapping\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"properties"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"新字段名"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"integer"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"删除索引库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除索引库"}},[t._v("#")]),t._v(" 删除索引库")]),t._v(" "),a("p",[a("strong",[t._v("语法：")])]),t._v(" "),a("ul",[a("li",[t._v("请求方式：DELETE")]),t._v(" "),a("li",[t._v("请求路径：/索引库名")]),t._v(" "),a("li",[t._v("请求参数：无")])]),t._v(" "),a("p",[a("strong",[t._v("格式：")])]),t._v(" "),a("div",{staticClass:"language-Plain extra-class"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[t._v("DELETE /索引库名\n")])])]),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("索引库操作有哪些？")]),t._v(" "),a("ul",[a("li",[t._v("创建索引库：PUT /索引库名")]),t._v(" "),a("li",[t._v("查询索引库：GET /索引库名")]),t._v(" "),a("li",[t._v("删除索引库：DELETE /索引库名")]),t._v(" "),a("li",[t._v("修改索引库，添加字段：PUT /索引库名/_mapping")])]),t._v(" "),a("p",[t._v("可以看到，对索引库的操作基本遵循的Restful的风格，因此API接口非常统一，方便记忆。")])])}),[],!1,null,null,null);a.default=n.exports}}]);